Index: backend/app.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>require('dotenv').config();\nconst express = require('express');\nconst initDb = require('./initDb');\nconst app = express();\nconst cors = require('cors');\nconst helmet = require('helmet');\n\nconst authRoutes = require('./routes/authRoutes');\nconst adminRoutes = require('./routes/adminRoutes');\nconst renterRoutes = require('./routes/renterRoutes');\nconst hostRoutes = require('./routes/hostRoutes');\nconst propertyRoutes = require('./routes/propertyRoutes');\n\napp.use(helmet());\napp.use(cors({ origin: ['http://localhost:3000', 'http://127.0.0.1:3000'], credentials: true }));\napp.use(express.json());\n\n// Serve static files from the 'uploads' directory\napp.use('/uploads', express.static('uploads'));\n\n// Middleware pour ajouter des en-tÃªtes CORS pour les fichiers statiques\napp.use('/uploads', (req, res, next) => {\n  res.header('Access-Control-Allow-Origin', 'http://localhost:3000, http://127.0.0.1:3000');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n  res.header('Access-Control-Allow-Credentials', 'true');\n  next();\n});\n\napp.use('/api/auth', authRoutes);\napp.use('/api/admin', adminRoutes);\napp.use('/api/renter', renterRoutes);\napp.use('/api/host', hostRoutes);\napp.use('/api/property', propertyRoutes);\n\napp.use((err, req, res, next) => {\n    console.error(err.stack);\n    res.status(500).send('Something broke!');\n});\n\nconst PORT = process.env.PORT || 3001;\n\ninitDb().then(() => {\n    app.listen(PORT, () => {\n        console.log(`Server running on port ${PORT}`);\n    });\n}).catch(err => {\n    console.error('Failed to initialize database:', err);\n    process.exit(1);\n});\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/app.js b/backend/app.js
--- a/backend/app.js	
+++ b/backend/app.js	
@@ -30,8 +30,6 @@
 app.use('/api/auth', authRoutes);
 app.use('/api/admin', adminRoutes);
 app.use('/api/renter', renterRoutes);
-app.use('/api/host', hostRoutes);
-app.use('/api/property', propertyRoutes);
 
 app.use((err, req, res, next) => {
     console.error(err.stack);
